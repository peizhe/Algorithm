package Algorithm;
/**
 * 	网址：http://2728green-rock.blog.163.com/blog/static/43636790200901211848284/
 * 
 * （1）初始时，S只包含源点，即S＝，v的距离为0。U包含除v外的其他顶点，U中顶点u距离为边上的权（若v与u有边）或 ）（若u不是v的出边邻接点）。
 * （2）从U中选取一个距离v最小的顶点k，把k，加入S中（该选定的距离就是v到k的最短路径长度）。
 * （3）以k为新考虑的中间点，修改U中各顶点的距离；若从源点v到顶点u（u U）的距离（经过顶点k）比原来距离（不经过顶点k）短，则修改顶点u的距离值，修改后的距离值的顶点k的距离加上边上的权。
 * （4）重复步骤（2）和（3）直到所有顶点都包含在S中。
 * 
 * @author MG
 *
 */
public class Dijkstra {
	//自己实现
}
